<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<import resource="classpath:dubboconstumer.xml" />

	<!-- 配置自动扫描 -->
	<context:component-scan base-package="cn.jkm.manage.api.interceptor"></context:component-scan>

	<!-- 配置aop -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>


	<!-- redis -->
	<bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--最大连接数 -->
		<property name="maxTotal" value="30" />
		<!--最大空闲数 -->
		<property name="maxIdle" value="5" />
		<!--最小空闲数 -->
		<property name="minIdle" value="0" />
		<!--达到最大连接数是否阻塞 -->
		<property name="blockWhenExhausted" value="true" />
		<!--最大连接数后最长阻塞时间 -->
		<property name="maxWaitMillis" value="15000" />
		<!--连接空闲的最小时间，可能被移除 -->
		<property name="minEvictableIdleTimeMillis" value="60000" />
		<!--连接空闲的最小时间，多余最小空闲连接的将被移除 -->
		<property name="softMinEvictableIdleTimeMillis" value="30000" />
		<!--对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3. -->
		<property name="numTestsPerEvictionRun" value="3" />
		<!--空闲连接的检测周期 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!--当连接给调用者使用时，是否检测空间超时 -->
		<property name="testWhileIdle" value="false" />
		<!--当连接给调用者使用时，是否检测其有效性 -->
		<property name="testOnBorrow" value="false" />
		<!--归还连接时，是否检测其有效性 -->
		<property name="testOnReturn" value="false" />

	</bean>
	<context:property-placeholder location="classpath:redis.properties"
		ignore-unresolvable="true" />
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0" ref="redisPoolConfig" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="password" value="${redis.password}" />
		<!-- <property name="database" value="${redis.database" /> -->
	</bean>
	<bean id="tokenRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />

</beans>